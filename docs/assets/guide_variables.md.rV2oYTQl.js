import{_ as s,c as a,o as i,a4 as n}from"./chunks/framework.DzjGgv20.js";const y=JSON.parse('{"title":"Variables","description":"","frontmatter":{},"headers":[],"relativePath":"guide/variables.md","filePath":"guide/variables.md"}'),t={name:"guide/variables.md"},p=n(`<h1 id="variables" tabindex="-1">Variables <a class="header-anchor" href="#variables" aria-label="Permalink to &quot;Variables&quot;">â€‹</a></h1><p>Variables in Radon can have different types of values: <code>int</code>, <code>float</code>, <code>string</code>, <code>array</code>, <code>tuple</code> or <code>object</code>. Don&#39;t forget that variables are statically typed, so you can&#39;t change their types.</p><p>You can define or alter variables like this:</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-53WlK" id="tab-vIXbPbJ" checked><label for="tab-vIXbPbJ">Radon</label><input type="radio" name="group-53WlK" id="tab-uxIaFYE"><label for="tab-uxIaFYE">mcfunction</label></div><div class="blocks"><div class="language-js vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">b </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1.248</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">myStr </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;hello&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">myArr </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">myObj </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;key&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: myArr, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;otherKey&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: myStr}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> copperItem</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;count&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Slot&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;id&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;minecraft:copper_ingot&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Immutable variable</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">HandItems</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:@e[type</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">zombie] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [copperItem, {}]</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Items</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">63</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [copperItem]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Don&#39;t forget that tuples&#39; length are not mutable.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// If an array has different typed elements, the array will be interpreted as a tuple</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// You can&#39;t assign a tuple to a non-constant variable because NBTs don&#39;t support tuples</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Therefore myTuple variable is automatically determined to be a constant</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">myTuple </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;hello&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, {</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;key&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Hi!&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}]</span></span></code></pre></div><div class="language-mcfunction vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">mcfunction</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>scoreboard players set a global 1</span></span>
<span class="line"><span>scoreboard players set b global 1248</span></span>
<span class="line"><span>data modify storage variables myStr set value &quot;hello&quot;</span></span>
<span class="line"><span>data modify storage variables myArr set value [1, 2, 3]</span></span>
<span class="line"><span>data modify storage variables myObj set value {&quot;key&quot;:[0],&quot;otherKey&quot;:&#39;&#39;}</span></span>
<span class="line"><span>data modify storage variables myObj.key set from storage variables myArr</span></span>
<span class="line"><span>data modify storage variables myObj.otherKey set from storage variables myStr</span></span>
<span class="line"><span>data modify entity @e[type=zombie] HandItems set value [{&quot;count&quot;: 1, &quot;Slot&quot;: 0, &quot;id&quot;: &quot;minecraft:copper_ingot&quot;}, {}]</span></span>
<span class="line"><span>data modify block 0 -63 0 Items set value [{&quot;count&quot;: 1, &quot;Slot&quot;: 0, &quot;id&quot;: &quot;minecraft:copper_ingot&quot;}]</span></span></code></pre></div></div></div><p>You can use mathematical expressions basically everywhere like this:</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-rKlWg" id="tab-i6YD-qe" checked><label for="tab-i6YD-qe">Radon</label><input type="radio" name="group-rKlWg" id="tab-n4bEqNr"><label for="tab-n4bEqNr">mcfunction</label></div><div class="blocks"><div class="language-js vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">d </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> b </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> c</span></span></code></pre></div><div class="language-mcfunction vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">mcfunction</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>scoreboard players operation int_1 --temp-- = b global</span></span>
<span class="line"><span>scoreboard players operation int_1 --temp-- *= c global</span></span>
<span class="line"><span>scoreboard players operation int_2 --temp-- = a global</span></span>
<span class="line"><span>scoreboard players operation int_2 --temp-- += int_1 --temp--</span></span>
<span class="line"><span>scoreboard players operation d global = int_2 --temp--</span></span></code></pre></div></div></div><p>There are a couple of methods and attributes assigned to built-in types:</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-0E8Z4" id="tab-mvNqI1H" checked><label for="tab-mvNqI1H">Radon</label><input type="radio" name="group-0E8Z4" id="tab-VF4JYbF"><label for="tab-VF4JYbF">mcfunction</label></div><div class="blocks"><div class="language-js vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 5.64</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">b </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> a.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sqrt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">c </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5.64</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sqrt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// This works too</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">d </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> a.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cbrt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> a.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">f </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> a.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Gives itself</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">myStr </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;hello&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">myStrLen </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> myStr.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">length</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">myArr </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">myArr.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">push</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">myArr.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pop</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">myArr.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">insert</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">myArrLen </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> myArr.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">length</span></span></code></pre></div><div class="language-mcfunction vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">mcfunction</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>scoreboard players set a global 5640</span></span>
<span class="line"><span>scoreboard players operation sqrt_0 --temp-- = a global</span></span>
<span class="line"><span>scoreboard players operation __sqrt__x --temp-- /= __sqrt__4 --temp--</span></span>
<span class="line"><span>scoreboard players operation __sqrt__output --temp-- = __sqrt__x --temp--</span></span>
<span class="line"><span>function namespace_here:__lib__/__sqrt__loop</span></span>
<span class="line"><span>scoreboard players operation b global = null global</span></span>
<span class="line"><span>scoreboard players set c global 2374</span></span>
<span class="line"><span>scoreboard players operation cbrt_0 --temp-- = a global</span></span>
<span class="line"><span>scoreboard players operation __cbrt__x --temp-- *= __cbrt__4d3 --temp--</span></span>
<span class="line"><span>scoreboard players operation __cbrt__output --temp-- = __cbrt__x --temp--</span></span>
<span class="line"><span>function namespace_here:__lib__/__cbrt__loop</span></span>
<span class="line"><span>scoreboard players operation d global = null global</span></span>
<span class="line"><span>scoreboard players operation int_1 --temp-- = a global</span></span>
<span class="line"><span>scoreboard players operation int_1 --temp-- /= FLOAT_PREC --temp--</span></span>
<span class="line"><span>scoreboard players operation e global = int_1 --temp--</span></span>
<span class="line"><span>scoreboard players operation f global = a global</span></span>
<span class="line"><span>data modify storage variables myStr set value &quot;hello&quot;</span></span>
<span class="line"><span>execute store result score int_2 --temp-- run data get storage variables myStr</span></span>
<span class="line"><span>scoreboard players operation myStrLen global = int_2 --temp--</span></span>
<span class="line"><span>data modify storage variables myArr set value [1, 2, 3]</span></span>
<span class="line"><span>data modify storage variables myArr append value 4</span></span>
<span class="line"><span>data remove storage variables myArr[-1]</span></span>
<span class="line"><span>data modify storage variables myArr insert 0 value 5</span></span>
<span class="line"><span>execute store result score int_5 --temp-- run data get storage variables myArr</span></span>
<span class="line"><span>scoreboard players operation myArrLen global = int_5 --temp--</span></span></code></pre></div></div></div>`,8),e=[p];function l(h,k,r,o,d,E){return i(),a("div",null,e)}const g=s(t,[["render",l]]);export{y as __pageData,g as default};
